package middleware

import "net/http"

// 1x1 transparent GIF
var pixel = [...]byte{
	0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x1, 0x0, 0x1, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0x21,
	0xf9, 0x4, 0x1, 0x0, 0x0, 0x0, 0x0, 0x2c, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x2, 0x1, 0x44, 0x0, 0x3b,
}

// Pixel writes transparent 1x1 GIF if it found pixel key in query params.
func Pixel(next http.HandlerFunc) http.HandlerFunc {
	return func(rw http.ResponseWriter, req *http.Request) {
		query := req.URL.Query()
		if _, found := query["pixel"]; found {
			rw.Header().Set("Content-Type", "image/gif")
			rw.WriteHeader(http.StatusOK)
			rw.Write(pixel[:])
			return
		}
		next.ServeHTTP(rw, req)
	}
}
