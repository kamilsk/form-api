// Code generated by protoc-gen-go. DO NOT EDIT.
// source: input.proto

package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ReadInputRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadInputRequest) Reset()         { *m = ReadInputRequest{} }
func (m *ReadInputRequest) String() string { return proto.CompactTextString(m) }
func (*ReadInputRequest) ProtoMessage()    {}
func (*ReadInputRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_input_1d2e775c48e2233e, []int{0}
}
func (m *ReadInputRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadInputRequest.Unmarshal(m, b)
}
func (m *ReadInputRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadInputRequest.Marshal(b, m, deterministic)
}
func (dst *ReadInputRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadInputRequest.Merge(dst, src)
}
func (m *ReadInputRequest) XXX_Size() int {
	return xxx_messageInfo_ReadInputRequest.Size(m)
}
func (m *ReadInputRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadInputRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadInputRequest proto.InternalMessageInfo

type ReadInputResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadInputResponse) Reset()         { *m = ReadInputResponse{} }
func (m *ReadInputResponse) String() string { return proto.CompactTextString(m) }
func (*ReadInputResponse) ProtoMessage()    {}
func (*ReadInputResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_input_1d2e775c48e2233e, []int{1}
}
func (m *ReadInputResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadInputResponse.Unmarshal(m, b)
}
func (m *ReadInputResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadInputResponse.Marshal(b, m, deterministic)
}
func (dst *ReadInputResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadInputResponse.Merge(dst, src)
}
func (m *ReadInputResponse) XXX_Size() int {
	return xxx_messageInfo_ReadInputResponse.Size(m)
}
func (m *ReadInputResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadInputResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadInputResponse proto.InternalMessageInfo

type ListenInputRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenInputRequest) Reset()         { *m = ListenInputRequest{} }
func (m *ListenInputRequest) String() string { return proto.CompactTextString(m) }
func (*ListenInputRequest) ProtoMessage()    {}
func (*ListenInputRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_input_1d2e775c48e2233e, []int{2}
}
func (m *ListenInputRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenInputRequest.Unmarshal(m, b)
}
func (m *ListenInputRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenInputRequest.Marshal(b, m, deterministic)
}
func (dst *ListenInputRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenInputRequest.Merge(dst, src)
}
func (m *ListenInputRequest) XXX_Size() int {
	return xxx_messageInfo_ListenInputRequest.Size(m)
}
func (m *ListenInputRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenInputRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenInputRequest proto.InternalMessageInfo

type ListenInputResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenInputResponse) Reset()         { *m = ListenInputResponse{} }
func (m *ListenInputResponse) String() string { return proto.CompactTextString(m) }
func (*ListenInputResponse) ProtoMessage()    {}
func (*ListenInputResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_input_1d2e775c48e2233e, []int{3}
}
func (m *ListenInputResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenInputResponse.Unmarshal(m, b)
}
func (m *ListenInputResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenInputResponse.Marshal(b, m, deterministic)
}
func (dst *ListenInputResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenInputResponse.Merge(dst, src)
}
func (m *ListenInputResponse) XXX_Size() int {
	return xxx_messageInfo_ListenInputResponse.Size(m)
}
func (m *ListenInputResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenInputResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListenInputResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ReadInputRequest)(nil), "grpc.ReadInputRequest")
	proto.RegisterType((*ReadInputResponse)(nil), "grpc.ReadInputResponse")
	proto.RegisterType((*ListenInputRequest)(nil), "grpc.ListenInputRequest")
	proto.RegisterType((*ListenInputResponse)(nil), "grpc.ListenInputResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InputClient is the client API for Input service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InputClient interface {
	Read(ctx context.Context, in *ReadInputRequest, opts ...grpc.CallOption) (*ReadInputResponse, error)
	Listen(ctx context.Context, in *ListenInputRequest, opts ...grpc.CallOption) (Input_ListenClient, error)
}

type inputClient struct {
	cc *grpc.ClientConn
}

func NewInputClient(cc *grpc.ClientConn) InputClient {
	return &inputClient{cc}
}

func (c *inputClient) Read(ctx context.Context, in *ReadInputRequest, opts ...grpc.CallOption) (*ReadInputResponse, error) {
	out := new(ReadInputResponse)
	err := c.cc.Invoke(ctx, "/grpc.Input/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inputClient) Listen(ctx context.Context, in *ListenInputRequest, opts ...grpc.CallOption) (Input_ListenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Input_serviceDesc.Streams[0], "/grpc.Input/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &inputListenClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Input_ListenClient interface {
	Recv() (*ListenInputResponse, error)
	grpc.ClientStream
}

type inputListenClient struct {
	grpc.ClientStream
}

func (x *inputListenClient) Recv() (*ListenInputResponse, error) {
	m := new(ListenInputResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// InputServer is the server API for Input service.
type InputServer interface {
	Read(context.Context, *ReadInputRequest) (*ReadInputResponse, error)
	Listen(*ListenInputRequest, Input_ListenServer) error
}

func RegisterInputServer(s *grpc.Server, srv InputServer) {
	s.RegisterService(&_Input_serviceDesc, srv)
}

func _Input_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadInputRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InputServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Input/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InputServer).Read(ctx, req.(*ReadInputRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Input_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenInputRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(InputServer).Listen(m, &inputListenServer{stream})
}

type Input_ListenServer interface {
	Send(*ListenInputResponse) error
	grpc.ServerStream
}

type inputListenServer struct {
	grpc.ServerStream
}

func (x *inputListenServer) Send(m *ListenInputResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Input_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.Input",
	HandlerType: (*InputServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _Input_Read_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Listen",
			Handler:       _Input_Listen_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "input.proto",
}

func init() { proto.RegisterFile("input.proto", fileDescriptor_input_1d2e775c48e2233e) }

var fileDescriptor_input_1d2e775c48e2233e = []byte{
	// 146 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xcc, 0x2b, 0x28,
	0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x49, 0x2f, 0x2a, 0x48, 0x56, 0x12, 0xe2,
	0x12, 0x08, 0x4a, 0x4d, 0x4c, 0xf1, 0x04, 0x49, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x28,
	0x09, 0x73, 0x09, 0x22, 0x89, 0x15, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x2a, 0x89, 0x70, 0x09, 0xf9,
	0x64, 0x16, 0x97, 0xa4, 0xe6, 0xa1, 0x28, 0x15, 0xe5, 0x12, 0x46, 0x11, 0x85, 0x28, 0x36, 0x6a,
	0x65, 0xe4, 0x62, 0x05, 0x8b, 0x08, 0x59, 0x72, 0xb1, 0x80, 0xcc, 0x12, 0x12, 0xd3, 0x03, 0x59,
	0xa7, 0x87, 0x6e, 0x97, 0x94, 0x38, 0x86, 0x38, 0xd4, 0x3e, 0x06, 0x21, 0x47, 0x2e, 0x36, 0x88,
	0xd9, 0x42, 0x12, 0x10, 0x45, 0x98, 0xf6, 0x4b, 0x49, 0x62, 0x91, 0x81, 0x19, 0x60, 0xc0, 0x98,
	0xc4, 0x06, 0xf6, 0xaa, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xd1, 0xea, 0x44, 0x9d, 0xf9, 0x00,
	0x00, 0x00,
}
