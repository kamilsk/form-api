// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kamilsk/form-api/pkg/service (interfaces: InputHandler)

// Package service_test is a generated GoMock package.
package service_test

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	domain "github.com/kamilsk/form-api/pkg/domain"
	query "github.com/kamilsk/form-api/pkg/storage/query"
	reflect "reflect"
)

// MockInputHandler is a mock of InputHandler interface
type MockInputHandler struct {
	ctrl     *gomock.Controller
	recorder *MockInputHandlerMockRecorder
}

// MockInputHandlerMockRecorder is the mock recorder for MockInputHandler
type MockInputHandlerMockRecorder struct {
	mock *MockInputHandler
}

// NewMockInputHandler creates a new mock instance
func NewMockInputHandler(ctrl *gomock.Controller) *MockInputHandler {
	mock := &MockInputHandler{ctrl: ctrl}
	mock.recorder = &MockInputHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInputHandler) EXPECT() *MockInputHandlerMockRecorder {
	return m.recorder
}

// HandleInput mocks base method
func (m *MockInputHandler) HandleInput(arg0 context.Context, arg1 domain.ID, arg2 domain.InputData) (*query.Input, error) {
	ret := m.ctrl.Call(m, "HandleInput", arg0, arg1, arg2)
	ret0, _ := ret[0].(*query.Input)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HandleInput indicates an expected call of HandleInput
func (mr *MockInputHandlerMockRecorder) HandleInput(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleInput", reflect.TypeOf((*MockInputHandler)(nil).HandleInput), arg0, arg1, arg2)
}

// LogRequest mocks base method
func (m *MockInputHandler) LogRequest(arg0 context.Context, arg1 *query.Input, arg2 domain.InputContext) error {
	ret := m.ctrl.Call(m, "LogRequest", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// LogRequest indicates an expected call of LogRequest
func (mr *MockInputHandlerMockRecorder) LogRequest(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LogRequest", reflect.TypeOf((*MockInputHandler)(nil).LogRequest), arg0, arg1, arg2)
}
